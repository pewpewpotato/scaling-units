# Test: Resource naming standards and validation
# Tests to ensure resource names conform to organizational standards

run "verify_resource_group_naming_convention" {
  command = plan

  variables {
    sku           = "Standard_AzureFrontDoor"
    location      = "East US"
    tags = {
      Environment = "test"
    }
    custom_domain = "example.com"
    suffix        = "test01"
  }

  # Verify resource group follows rg-{naming}-{suffix} pattern
  assert {
    condition     = can(regex("^rg-.*-test01$", azurerm_resource_group.main.name))
    error_message = "Resource group name must follow pattern: rg-{name}-{suffix}"
  }
}

run "verify_cdn_profile_naming_convention" {
  command = plan

  variables {
    sku           = "Standard_AzureFrontDoor"
    location      = "East US"
    tags = {
      Environment = "test"
    }
    custom_domain = "example.com"
    suffix        = "test01"
  }

  # Verify CDN profile follows afd-{naming}-{suffix} pattern
  assert {
    condition     = can(regex("^afd-.*-test01$", azurerm_cdn_frontdoor_profile.main.name))
    error_message = "CDN profile name must follow pattern: afd-{name}-{suffix}"
  }
}

run "verify_resource_names_use_azure_naming_module" {
  command = plan

  variables {
    sku           = "Standard_AzureFrontDoor"
    location      = "East US"
    tags = {
      Environment = "test"
    }
    custom_domain = "example.com"
    suffix        = "test01"
  }

  # Verify names are generated by azure/naming module
  assert {
    condition     = azurerm_resource_group.main.name == module.naming.resource_group.name
    error_message = "Resource group name must use azure/naming module output"
  }

  assert {
    condition     = azurerm_cdn_frontdoor_profile.main.name == module.naming.frontdoor.name
    error_message = "CDN profile name must use azure/naming module output"
  }
}

run "verify_suffix_propagates_to_all_resources" {
  command = plan

  variables {
    sku           = "Standard_AzureFrontDoor"
    location      = "East US"
    tags = {
      Environment = "test"
    }
    custom_domain = "example.com"
    suffix        = "prod123"
  }

  # All resource names should include the suffix
  assert {
    condition     = can(regex("prod123$", azurerm_resource_group.main.name))
    error_message = "Resource group name must end with provided suffix"
  }

  assert {
    condition     = can(regex("prod123$", azurerm_cdn_frontdoor_profile.main.name))
    error_message = "CDN profile name must end with provided suffix"
  }
}

run "verify_resource_names_have_appropriate_length" {
  command = plan

  variables {
    sku           = "Standard_AzureFrontDoor"
    location      = "East US"
    tags = {
      Environment = "test"
    }
    custom_domain = "example.com"
    suffix        = "test01"
  }

  # Azure resource names have specific length limits
  assert {
    condition     = length(azurerm_resource_group.main.name) <= 90
    error_message = "Resource group name must be 90 characters or less"
  }

  assert {
    condition     = length(azurerm_cdn_frontdoor_profile.main.name) <= 260
    error_message = "CDN profile name must be 260 characters or less"
  }
}

run "verify_resource_names_contain_no_invalid_characters" {
  command = plan

  variables {
    sku           = "Standard_AzureFrontDoor"
    location      = "East US"
    tags = {
      Environment = "test"
    }
    custom_domain = "example.com"
    suffix        = "test01"
  }

  # Resource names should only contain valid characters
  assert {
    condition     = can(regex("^[a-zA-Z0-9\\-_\\.\\(\\)]+$", azurerm_resource_group.main.name))
    error_message = "Resource group name contains invalid characters"
  }

  assert {
    condition     = can(regex("^[a-zA-Z0-9\\-]+$", azurerm_cdn_frontdoor_profile.main.name))
    error_message = "CDN profile name contains invalid characters"
  }
}
